{"ast":null,"code":"var _jsxFileName = \"/Users/sejlaali/General_Assembly/sei/12-week/01-monday/project4/kosovo-1/client/src/components/MostPopular.js\";\nimport React, { Component } from 'react';\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nimport MapGL, { Marker, Popup, NavigationControl, FullscreenControl } from 'react-map-gl';\nconst TOKEN = pk.eyJ1Ijoic2VqbGFhbGkiLCJhIjoiY2p5MGdmcGUxMDJ1eDNsbGV4czBod2wxZCJ9.oXQmFa0BWv9YkBlP6zCKCA;\nconst fullscreenControlStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n};\nconst navStyle = {\n  position: 'absolute',\n  top: 36,\n  left: 0,\n  padding: '10px'\n};\nexport default class MostPopular extends Component {\n  constructor(props) {\n    super(props);\n\n    this._updateViewport = viewport => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this._renderCityMarker = (city, index) => {\n      return React.createElement(Marker, {\n        key: \"marker-\".concat(index),\n        longitude: city.longitude,\n        latitude: city.latitude,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(CityPin, {\n        size: 20,\n        onClick: () => this.setState({\n          popupInfo: city\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      viewport: {\n        latitude: 37.785164,\n        longitude: -100,\n        zoom: 3.5,\n        bearing: 0,\n        pitch: 0\n      },\n      popupInfo: null\n    };\n  }\n\n  _renderPopup() {\n    const popupInfo = this.state.popupInfo;\n    return popupInfo && React.createElement(Popup, {\n      tipSize: 5,\n      anchor: \"top\",\n      longitude: popupInfo.longitude,\n      latitude: popupInfo.latitude,\n      closeOnClick: false,\n      onClose: () => this.setState({\n        popupInfo: null\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(CityInfo, {\n      info: popupInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const viewport = this.state.viewport;\n    return React.createElement(MapGL, Object.assign({}, viewport, {\n      width: \"100%\",\n      height: \"100%\",\n      mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n      onViewportChange: this._updateViewport,\n      mapboxApiAccessToken: TOKEN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), CITIES.map(this._renderCityMarker), this._renderPopup(), React.createElement(\"div\", {\n      className: \"fullscreen\",\n      style: fullscreenControlStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(FullscreenControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"nav\",\n      style: navStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(NavigationControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(ControlPanel, {\n      containerComponent: this.props.containerComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\nexport function renderToDom(container) {\n  render(React.createElement(MostPopular, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), container);\n}","map":{"version":3,"sources":["/Users/sejlaali/General_Assembly/sei/12-week/01-monday/project4/kosovo-1/client/src/components/MostPopular.js"],"names":["React","Component","ReactMapboxGl","Layer","Feature","MapGL","Marker","Popup","NavigationControl","FullscreenControl","TOKEN","pk","eyJ1Ijoic2VqbGFhbGkiLCJhIjoiY2p5MGdmcGUxMDJ1eDNsbGV4czBod2wxZCJ9","oXQmFa0BWv9YkBlP6zCKCA","fullscreenControlStyle","position","top","left","padding","navStyle","MostPopular","constructor","props","_updateViewport","viewport","setState","_renderCityMarker","city","index","longitude","latitude","popupInfo","state","zoom","bearing","pitch","_renderPopup","render","CITIES","map","containerComponent","renderToDom","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP,IAAwBC,KAAxB,EAA+BC,OAA/B,QAA8C,iBAA9C;AACA,OAAOC,KAAP,IAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,iBAA9B,EAAiDC,iBAAjD,QAAyE,cAAzE;AAEA,MAAMC,KAAK,GAAGC,EAAE,CAACC,gEAAH,CAAoEC,sBAAlF;AAEA,MAAMC,sBAAsB,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,UADiB;AAE3BC,EAAAA,GAAG,EAAE,CAFsB;AAG3BC,EAAAA,IAAI,EAAE,CAHqB;AAI3BC,EAAAA,OAAO,EAAE;AAJkB,CAA/B;AAOE,MAAMC,QAAQ,GAAG;AACfJ,EAAAA,QAAQ,EAAE,UADK;AAEfC,EAAAA,GAAG,EAAE,EAFU;AAGfC,EAAAA,IAAI,EAAE,CAHS;AAIfC,EAAAA,OAAO,EAAE;AAJM,CAAjB;AAOA,eAAe,MAAME,WAAN,SAA0BnB,SAA1B,CAAoC;AACjDoB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,eAdmB,GAcDC,QAAQ,IAAI;AAC5B,WAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;AACD,KAhBkB;;AAAA,SAkBnBE,iBAlBmB,GAkBC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,aACE,oBAAC,MAAD;AAAQ,QAAA,GAAG,mBAAYA,KAAZ,CAAX;AAAgC,QAAA,SAAS,EAAED,IAAI,CAACE,SAAhD;AAA2D,QAAA,QAAQ,EAAEF,IAAI,CAACG,QAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,EAAf;AAAmB,QAAA,OAAO,EAAE,MAAM,KAAKL,QAAL,CAAc;AAACM,UAAAA,SAAS,EAAEJ;AAAZ,SAAd,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAxBkB;;AAEjB,SAAKK,KAAL,GAAa;AACXR,MAAAA,QAAQ,EAAE;AACRM,QAAAA,QAAQ,EAAE,SADF;AAERD,QAAAA,SAAS,EAAE,CAAC,GAFJ;AAGRI,QAAAA,IAAI,EAAE,GAHE;AAIRC,QAAAA,OAAO,EAAE,CAJD;AAKRC,QAAAA,KAAK,EAAE;AALC,OADC;AAQXJ,MAAAA,SAAS,EAAE;AARA,KAAb;AAUD;;AAcDK,EAAAA,YAAY,GAAG;AAAA,UACNL,SADM,GACO,KAAKC,KADZ,CACND,SADM;AAGb,WACEA,SAAS,IACP,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE,CADX;AAEE,MAAA,MAAM,EAAC,KAFT;AAGE,MAAA,SAAS,EAAEA,SAAS,CAACF,SAHvB;AAIE,MAAA,QAAQ,EAAEE,SAAS,CAACD,QAJtB;AAKE,MAAA,YAAY,EAAE,KALhB;AAME,MAAA,OAAO,EAAE,MAAM,KAAKL,QAAL,CAAc;AAACM,QAAAA,SAAS,EAAE;AAAZ,OAAd,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAFJ;AAcD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,UACAb,QADA,GACY,KAAKQ,KADjB,CACAR,QADA;AAGP,WACE,oBAAC,KAAD,oBACMA,QADN;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,MAAM,EAAC,MAHT;AAIE,MAAA,QAAQ,EAAC,gCAJX;AAKE,MAAA,gBAAgB,EAAE,KAAKD,eALzB;AAME,MAAA,oBAAoB,EAAEb,KANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQG4B,MAAM,CAACC,GAAP,CAAW,KAAKb,iBAAhB,CARH,EAUG,KAAKU,YAAL,EAVH,EAYE;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAEtB,sBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAZF,EAeE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAEK,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfF,EAmBE,oBAAC,YAAD;AAAc,MAAA,kBAAkB,EAAE,KAAKG,KAAL,CAAWkB,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CADF;AAuBD;;AAxEgD;AA2EnD,OAAO,SAASC,WAAT,CAAqBC,SAArB,EAAgC;AACrCL,EAAAA,MAAM,CAAC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAD,EAAkBK,SAAlB,CAAN;AACD","sourcesContent":["import React, {Component} from 'react'\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nimport MapGL, {Marker, Popup, NavigationControl, FullscreenControl} from 'react-map-gl';\n\nconst TOKEN = pk.eyJ1Ijoic2VqbGFhbGkiLCJhIjoiY2p5MGdmcGUxMDJ1eDNsbGV4czBod2wxZCJ9.oXQmFa0BWv9YkBlP6zCKCA\n\nconst fullscreenControlStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    padding: '10px'\n  };\n  \n  const navStyle = {\n    position: 'absolute',\n    top: 36,\n    left: 0,\n    padding: '10px'\n  };\n  \n  export default class MostPopular extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        viewport: {\n          latitude: 37.785164,\n          longitude: -100,\n          zoom: 3.5,\n          bearing: 0,\n          pitch: 0\n        },\n        popupInfo: null\n      };\n    }\n  \n    _updateViewport = viewport => {\n      this.setState({viewport});\n    };\n  \n    _renderCityMarker = (city, index) => {\n      return (\n        <Marker key={`marker-${index}`} longitude={city.longitude} latitude={city.latitude}>\n          <CityPin size={20} onClick={() => this.setState({popupInfo: city})} />\n        </Marker>\n      );\n    };\n  \n    _renderPopup() {\n      const {popupInfo} = this.state;\n  \n      return (\n        popupInfo && (\n          <Popup\n            tipSize={5}\n            anchor=\"top\"\n            longitude={popupInfo.longitude}\n            latitude={popupInfo.latitude}\n            closeOnClick={false}\n            onClose={() => this.setState({popupInfo: null})}\n          >\n            <CityInfo info={popupInfo} />\n          </Popup>\n        )\n      );\n    }\n  \n    render() {\n      const {viewport} = this.state;\n  \n      return (\n        <MapGL\n          {...viewport}\n          width=\"100%\"\n          height=\"100%\"\n          mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n          onViewportChange={this._updateViewport}\n          mapboxApiAccessToken={TOKEN}\n        >\n          {CITIES.map(this._renderCityMarker)}\n  \n          {this._renderPopup()}\n  \n          <div className=\"fullscreen\" style={fullscreenControlStyle}>\n            <FullscreenControl />\n          </div>\n          <div className=\"nav\" style={navStyle}>\n            <NavigationControl />\n          </div>\n  \n          <ControlPanel containerComponent={this.props.containerComponent} />\n        </MapGL>\n      );\n    }\n  }\n  \n  export function renderToDom(container) {\n    render(<MostPopular />, container);\n  }"]},"metadata":{},"sourceType":"module"}