{"ast":null,"code":"var _jsxFileName = \"/Users/sejlaali/General_Assembly/sei/12-week/01-monday/project4/kosovo-1/client/src/components/Reviews.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport ReviewForm from \"./ReviewForm\";\n\nclass Reviews extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReviewClick = () => {\n      this.setState({\n        form: true\n      });\n    };\n\n    this.handleEdit = async () => {};\n\n    this.matchIds = async () => {\n      const currentUserId = localStorage.getItem(\"uid\");\n      const res = await axios.get(\"http://localhost:3000/users\");\n      const data = res.data;\n      const currentUser = data.filter(item => item.email === currentUserId);\n      this.setState({\n        currentUser: currentUser[0]\n      }); // console.log(this.state.currentUser.id)\n    };\n\n    this.state = {\n      reviews: [],\n      form: false,\n      currentUser: {},\n      id: null\n    };\n  }\n\n  async componentDidMount() {\n    const res = await axios.get(\"http://localhost:3000/posts/\".concat(this.props.match.params.id, \"/reviews\"));\n    const reviews = res.data;\n    this.setState({\n      reviews,\n      id: this.props.match.params.id\n    });\n    this.matchIds();\n  }\n\n  render() {\n    // const currentUserReviews = this.state.reviews.filter(item => item.user_id === this.state.currentUser.id).map(review => (\n    //     <div style={{ border: \"1px solid blue\", width: \"50%\", margin: \"0 auto\" }}>\n    //     <h2>{review.title}</h2>\n    //     <p>{review.review_text}</p>\n    //     <p>Written by: {review.first_name} {review.last_name}</p>\n    //     <button>Edit</button>\n    //     <button>Delete</button>\n    //     </div>\n    // ))\n    // const nonUserReviews = this.state.reviews.filter(item => item.user_id !== this.state.currentUser.id).map(review => (\n    //     <div style={{ border: \"1px solid blue\", width: \"50%\", margin: \"0 auto\" }}>\n    //     <h2>{review.title}</h2>\n    //     <p>{review.review_text}</p>\n    //     <p>Written by: {review.first_name} {review.last_name}</p>\n    //     </div>\n    // ))\n    // const renderReviews = this.state.reviews.filter(item => !item.user_id).map(review => (\n    //     <div style={{ border: \"1px solid blue\", width: \"50%\", margin: \"0 auto\" }}>\n    //     <h4>{review.title}</h4>\n    //     <p>{review.review_text}</p>\n    //     <p>\n    //       Written by: {review.first_name} {review.last_name}\n    //     </p>\n    //   </div>\n    // ));\n    // const renderReviewsConditional = !this.state.currentUser ? {renderReviews} : {currentUserReviews}\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.form ? React.createElement(ReviewForm, {\n      id: this.state.id,\n      isSignedIn: this.props.isSignedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      onClick: this.handleReviewClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Add a review\"), nonUserReviews);\n  }\n\n}\n\nexport default Reviews;","map":{"version":3,"sources":["/Users/sejlaali/General_Assembly/sei/12-week/01-monday/project4/kosovo-1/client/src/components/Reviews.js"],"names":["React","Component","axios","Link","ReviewForm","Reviews","constructor","props","handleReviewClick","setState","form","handleEdit","matchIds","currentUserId","localStorage","getItem","res","get","data","currentUser","filter","item","email","state","reviews","id","componentDidMount","match","params","render","isSignedIn","nonUserReviews"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC9BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsBnBC,iBAtBmB,GAsBC,MAAM;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KA1BkB;;AAAA,SA4BnBC,UA5BmB,GA4BN,YAAY,CAExB,CA9BkB;;AAAA,SAgCnBC,QAhCmB,GAgCR,YAAY;AACrB,YAAMC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAtB;AACA,YAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,+BAAlB;AACA,YAAMC,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACA,YAAMC,WAAW,GAAGD,IAAI,CAACE,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeT,aAAnC,CAApB;AACA,WAAKJ,QAAL,CAAc;AACZU,QAAAA,WAAW,EAAEA,WAAW,CAAC,CAAD;AADZ,OAAd,EALqB,CAQrB;AACD,KAzCkB;;AAEjB,SAAKI,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXd,MAAAA,IAAI,EAAE,KAFK;AAGXS,MAAAA,WAAW,EAAE,EAHF;AAIXM,MAAAA,EAAE,EAAE;AAJO,KAAb;AAMD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMV,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,uCACe,KAAKV,KAAL,CAAWoB,KAAX,CAAiBC,MAAjB,CAAwBH,EADvC,cAAlB;AAGA,UAAMD,OAAO,GAAGR,GAAG,CAACE,IAApB;AACA,SAAKT,QAAL,CAAc;AACZe,MAAAA,OADY;AAEZC,MAAAA,EAAE,EAAE,KAAKlB,KAAL,CAAWoB,KAAX,CAAiBC,MAAjB,CAAwBH;AAFhB,KAAd;AAIA,SAAKb,QAAL;AACD;;AAuBDiB,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWb,IAAX,GACC,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAE,KAAKa,KAAL,CAAWE,EAA3B;AAA+B,MAAA,UAAU,EAAE,KAAKlB,KAAL,CAAWuB,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEG,IAHN,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKtB,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAOGuB,cAPH,CADF;AAYD;;AAvF6B;;AA0FhC,eAAe1B,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport ReviewForm from \"./ReviewForm\";\n\nclass Reviews extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reviews: [],\n      form: false,\n      currentUser: {},\n      id: null\n    };\n  }\n\n  async componentDidMount() {\n    const res = await axios.get(\n      `http://localhost:3000/posts/${this.props.match.params.id}/reviews`\n    );\n    const reviews = res.data;\n    this.setState({\n      reviews,\n      id: this.props.match.params.id\n    });\n    this.matchIds();\n  }\n\n  handleReviewClick = () => {\n    this.setState({\n      form: true\n    });\n  };\n\n  handleEdit = async () => {\n\n  };\n\n  matchIds = async () => {\n    const currentUserId = localStorage.getItem(\"uid\");\n    const res = await axios.get(`http://localhost:3000/users`);\n    const data = res.data;\n    const currentUser = data.filter(item => item.email === currentUserId);\n    this.setState({\n      currentUser: currentUser[0]\n    });\n    // console.log(this.state.currentUser.id)\n  };\n\n  render() {\n    // const currentUserReviews = this.state.reviews.filter(item => item.user_id === this.state.currentUser.id).map(review => (\n    //     <div style={{ border: \"1px solid blue\", width: \"50%\", margin: \"0 auto\" }}>\n    //     <h2>{review.title}</h2>\n    //     <p>{review.review_text}</p>\n    //     <p>Written by: {review.first_name} {review.last_name}</p>\n    //     <button>Edit</button>\n    //     <button>Delete</button>\n    //     </div>\n    // ))\n\n    // const nonUserReviews = this.state.reviews.filter(item => item.user_id !== this.state.currentUser.id).map(review => (\n    //     <div style={{ border: \"1px solid blue\", width: \"50%\", margin: \"0 auto\" }}>\n    //     <h2>{review.title}</h2>\n    //     <p>{review.review_text}</p>\n    //     <p>Written by: {review.first_name} {review.last_name}</p>\n    //     </div>\n    // ))\n    \n    // const renderReviews = this.state.reviews.filter(item => !item.user_id).map(review => (\n    //     <div style={{ border: \"1px solid blue\", width: \"50%\", margin: \"0 auto\" }}>\n    //     <h4>{review.title}</h4>\n    //     <p>{review.review_text}</p>\n    //     <p>\n    //       Written by: {review.first_name} {review.last_name}\n    //     </p>\n    //   </div>\n    // ));\n    \n    // const renderReviewsConditional = !this.state.currentUser ? {renderReviews} : {currentUserReviews}\n\n    return (\n      <div>\n        {this.state.form ? (\n          <ReviewForm id={this.state.id} isSignedIn={this.props.isSignedIn} />\n        ) : null}\n        <button onClick={this.handleReviewClick}>Add a review</button>\n        {/* {renderReviews} */}\n         {/* {currentUserReviews} */}\n        {nonUserReviews}\n        {/* {renderReviewsConditional} */}\n      </div>\n    );\n  }\n}\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}